// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';


document.body.style.margin = "0";

var $$console = document.createElement("div");

$$console.style.width = "300px";

$$console.style.maxHeight = "120px";

$$console.style.overflow = "scroll";

$$console.style.webkitOverflowScrolling = "touch";

$$console.style.color = "white";

$$console.style.position = "absolute";

$$console.style.bottom = "0px";

$$console.style.margin = "0px";

$$console.style.fontFamily = "-apple-system, BlinkMacSystemFont, sans-serif";

document.body.appendChild($$console);

function log(msg) {
  var node = document.createElement("div");
  node.innerText = JSON.stringify(msg);
  $$console.prepend(node);
  return /* () */0;
}

log("Try drawing with many fingers on iPad");

var canvas = document.querySelector("#index");

var width = window.innerWidth;

var height = window.innerHeight;

canvas.width = width;

canvas.height = height;

canvas.style.outline = "1px solid black";

var context = canvas.getContext("2d");

context.fillStyle = "black";

context.fillRect(0, 0, width, height);

var strokes = /* array */[];

canvas.addEventListener("touchstart", (function (e) {
        e.preventDefault();
        strokes.push(/* array */[]);
        return /* () */0;
      }));

canvas.addEventListener("touchmove", (function (e) {
        e.preventDefault();
        context.fillStyle = "white";
        context.strokeStyle = "white";
        context.lineWidth = 2;
        context.globalAlpha = 0.2;
        Array.from(e.touches).forEach((function (touch) {
                var point_000 = /* x */touch.clientX;
                var point_001 = /* y */touch.clientY;
                var point = /* record */[
                  point_000,
                  point_001
                ];
                if (strokes.length !== 0) {
                  var latestStroke = strokes[strokes.length - 1 | 0];
                  if (latestStroke.length !== 0) {
                    var prevPoint = latestStroke[latestStroke.length - 1 | 0];
                    context.beginPath();
                    context.moveTo(prevPoint[/* x */0], prevPoint[/* y */1]);
                    context.lineTo(point_000, point_001);
                    context.stroke();
                    context.closePath();
                    latestStroke.push(point);
                    return /* () */0;
                  } else {
                    context.fillRect(point_000, point_001, 2, 2);
                    latestStroke.push(point);
                    return /* () */0;
                  }
                } else {
                  context.fillRect(point_000, point_001, 2, 2);
                  strokes.push(/* array */[point]);
                  return /* () */0;
                }
              }));
        return /* () */0;
      }));

exports.$$console = $$console;
exports.log = log;
exports.canvas = canvas;
exports.width = width;
exports.height = height;
exports.context = context;
exports.strokes = strokes;
/*  Not a pure module */
